name: ci
on:
  push:
    paths-ignore:
      - 'docs/**'
    branches:
      - main
  pull_request:
    paths-ignore:
      - 'docs/**'
    branches:
      - main

jobs:
  lint:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-20.04]
        node: [18]

    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v3
      - uses: pnpm/action-setup@v2
        with:
          version: 8
      - name: Use Node.js ${{ matrix.node }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node }}
          cache: 'pnpm'
      - name: Install dependencies
        run: pnpm install
      - name: Lint
        run: pnpm run lint

  test:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-20.04]
        node: [18]

    timeout-minutes: 10

    steps:
      - uses: actions/checkout@v3
      - uses: pnpm/action-setup@v2
        with:
          version: 8
      - name: Use Node.js ${{ matrix.node }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node }}
          cache: 'pnpm'
      - name: Install dependencies
        run: pnpm install
      - name: Unit test
        run: pnpm run test:unit

  build:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-20.04]
        node: [18]

    timeout-minutes: 10
    needs:
      - lint
      - test

    steps:
      - uses: actions/checkout@v3
      - uses: pnpm/action-setup@v2
        with:
          version: 8
      - name: Use Node.js ${{ matrix.node }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node }}
          cache: 'pnpm'
      - name: Install dependencies
        run: pnpm install
      - name: Build
        run: pnpm run build:core
      - name: Cache packages/core dist
        uses: actions/cache@v3
        with:
          path: packages/core/dist
          key: ${{ github.sha }}

  # release-core:
  #   if: |
  #     github.event_name == 'push' &&
  #     !contains(github.event.head_commit.message, 'chore') &&
  #     !contains(github.event.head_commit.message, 'docs')
  #   needs:
  #     - build
  #   runs-on: ${{ matrix.os }}

  #   strategy:
  #     matrix:
  #       os: [ubuntu-20.04]
  #       node: [18]

  #   timeout-minutes: 20
  #   environment: release

  #   steps:
  #     - uses: actions/checkout@v3
  #     - uses: pnpm/action-setup@v2
  #       with:
  #         version: 8
  #     - name: Use Node.js ${{ matrix.node }}
  #       uses: actions/setup-node@v3
  #       with:
  #         node-version: ${{ matrix.node }}
  #         cache: 'pnpm'
  #     - name: Install dependencies
  #       run: pnpm install
  #     - name: Restore dist cache
  #       uses: actions/cache@v3
  #       with:
  #         path: packages/core/dist
  #         key: ${{ github.sha }}
  #     - name: Release
  #       env:
  #         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  #         NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
  #       run: pnpm run release
